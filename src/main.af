.needs <std> // includes the standard library header file that has functions that are necessary for most aflat programs to run
import * from "io" under io; // import all of the functions from the standard io module and put them under the io namespace
import TodoItem from "./src/TodoItem"; // import the TodoItem class from the local src/TodoItem Module
import { listFromStrings } from "./src/TodoItem" under todo;
import string from "String"; // import the String class from the standard String module 
import List from "Collections"; // import the List class from the standard Collections module
import {str_toInt, len, str_comp} from "strings" under st; // import the str_toInt function from the standard strings module and put it under the st namespace
import { worker } from "concurrency" under async; // import the worker function from the standard concurrency module and put it under the async namespace
import File from "files"; // import the File class from the standard File module
import Result from "concurrency"; // import the Result class from the standard concurrency module
import { createFile, openFile } from "files" under fs; // import the create function from the standard files module and put it under the f namespace

const adr FILE_NAME = "todo.txt"; // the file that the todo list is stored in

adr save(List _arg) : async.worker {
	// create a new file called todo.txt
	let file = fs.createFile(FILE_NAME);
	
	_arg.forEach([TodoItem item, int index, File f] => {
		item.write(f);
	}, file);
	file.close();
};

int menu(List todoList) { // Declares a function that takes a list of TodoItems as an argument
	while true { // A while loop runs as long as the condition is true (in this case, always)
		io.clear(); // This is a function in the io module that clears the console
		io.print("Your List( ✓ : done,  ✗ : pending, ⚠ : overdue ):\n"); // This is a function in the print module that prints a string to the console
		io.print("-------------------------------------------------------------\n");
		todoList.forEach([TodoItem item, int index] => { // The List class has a forEach function that takes a lambda as an argument;
			io.printInt(index + 1);
			io.print(": ");
			item.print();
			io.print("\n");
		});

		if todoList.getCount() == 0 { // The List class has a getCount function that returns the number of items in the list
			io.print("Congratulations! You've finished the TODO list!\n");
		};
		io.print("---------------------------------------------------------------\n");

		io.print("\nMenu:\n");
		io.print("1. Add a new item\n");
		io.print("2. Remove an item\n");
		io.print("3. Mark an item as done\n");
		io.print("4. Delete all finished items\n");
		io.print("5. Save\n");
		io.print("q. quit\n");
		io.print("wq. save and quit\n");

		char [256] input; // This is how you declare an array in aflat.
		io.print("Enter your choice: ");
		io.readString(input); // This is a function in the io module that reads a string from the console and stores it in a buffer
		
		char choice = input[0]; // This is how you access an element in an array in aflat.
		if choice == '1' {
			io.print("Add new item\n");
			io.print("Enter item title: ");
			io.readString(input);
			char [256] dueDate;
			io.print("Enter due date(mm-dd-yyyy): ");
			io.readString(dueDate);
			TodoItem newItem = TodoItem(input, dueDate); // Creates an instance of the TodoItem class and passes the input string to the constructor
			todoList.pushBack(newItem);
		} else if choice == '2'{
			io.print("Remove an item\n");
			io.print("Enter item index: ");
			io.readString(input);
			int i = st.str_toInt(input);
			if (i >= 1) & (i <= todoList.getCount()) {
				todoList.drop(i - 1);
			} else {
				io.print("Command failed - the specified item index is out of range.\n", 'r');
				io.print("Select enter to continue.");
				io.readString(input);
			};
		} else if choice == '3' {
			io.print("Complete an item\n");
			io.print("Enter item index: ");
			io.readString(input);
			int i = st.str_toInt(input);
			TodoItem selected = todoList.get(i - 1);
			selected.complete();
		} else if choice == '4' {
			for int i = 0; i < todoList.getCount(); i++ { // This is you can use a for loop in aflat
				TodoItem current = todoList.get(i); // The List class has a get function that returns the item at the specified index
				if current.isCompleted() {
					current.del(); // Calls the del function on the current item
					todoList.drop(i); // The List class has a drop function that removes the item at the specified index
					i = i - 1;
				};
			};
		} else if choice == '5' {
			save(todoList);
		} else if choice == 'q' return 0
		else if(st.str_comp(input, "wq") == 1) {
			save(todoList);
			return 0;
		} else {
			if st.len(input) == 0 {
				io.print("Command failed - you must enter a choice.\n", 'r');
				io.print("Select enter to continue.");
				io.readString(input);
			} else {
				char[256] dueDate;
				io.print("Enter due date(mm-dd-yyyy): ");
				io.readString(dueDate);
				TodoItem newItem = TodoItem(input, dueDate);
				todoList.pushBack(newItem);
			};
		};
	};
	return 0;
};

int main() { // The main function is the entry point of the program
	let saveFile = fs.openFile(FILE_NAME);
	if saveFile != NULL {
		io.print("Loading saved list...\n");
		let saveList = saveFile.toList('\n');
		io.print("Loaded ", 'g');
		saveFile.close();
		io.print("closed\n");
		menu(todo.listFromStrings(saveList));
	} else {
		menu(List(TodoItem, 1));
	};
	return 0;
};
